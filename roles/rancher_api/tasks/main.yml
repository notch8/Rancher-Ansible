---
- name: Create api
  command: ./api.sh
  register: rancher_api_output
  until: rancher_api_output.stdout.find("publicValue") != -1
  retries: 30
  delay: 10

- name: Get ec2 information
  action: uri
      method=GET
      status_code=200
      url="http://169.254.169.254/latest/dynamic/instance-identity/document" return_content=yes
  register: ec2_info

- name: Get the default project id
  action: uri
      method=GET
      status_code=200
      url="http://{{ rancher_server }}:{{ rancher_port }}/v1/projects" return_content=yes
  register: project_id

- name: make sure utility stacks are running
  action: uri
      method=GET
      status_code=200
      url="http://{{ rancher_server }}:{{ rancher_port }}/v2-beta/projects/{{ project_id.json['data'][0]['id'] }}/stacks" return_content=yes
  register: rancher_stack_info
  until: rancher_stack_info.json['data'][0]['state'] == 'active' and rancher_stack_info.json['data'][1]['state'] == 'active' and rancher_stack_info.json['data'][2]['state'] == 'active' and rancher_stack_info.json['data'][3]['state'] == 'active'
  retries: 30
  delay: 10

- debug:
    msg: "{{ rancher_stack_info.json['data'][0]['state'] }} {{ rancher_stack_info.json['data'][1]['state'] }} {{ rancher_stack_info.json['data'][2]['state'] }} {{ rancher_stack_info.json['data'][3]['state'] }}"

- name: trigger lambda    
  uri: 
    url: "{{ lookup('env','lambda_url') }}"
    method: POST
    return_content: yes
    HEADER_Content-Type: "application/json"
    body: ' { "publicValue":"{{ (rancher_api_output.stdout|from_json).publicValue }}","secretValue":"{{ (rancher_api_output.stdout|from_json).secretValue }}","instance_ip":"{{ (ec2_info.content|from_json).privateIp }}","instance_id":"{{ (ec2_info.content|from_json).instanceId }}" } '